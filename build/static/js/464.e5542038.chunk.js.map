{"version":3,"file":"static/js/464.e5542038.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return false;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n    return true;\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            const newValues = checkTargetForNewValues(this, target, origin);\n            // If new values have been added, for instance named color values, transform these\n            if (transformValues && newValues) {\n                origin = transformValues(origin);\n            }\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["Feature","node","_classCallCheck","this","isMounted","_createClass","key","value","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","arguments","length","undefined","point","x","y","addPointerInfo","handler","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","distance","a","b","Math","abs","PanSession","handlers","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","frame","update","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","pipe","window","cancelFrame","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","_ref","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Object","hasOwnProperty","call","Element","prototype","results","supports","_loop","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","isEasingArray","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","easingDefinitionToFunction","definition","invariant","_definition","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","resolveSpring","restDelta","restSpeed","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","start","stop","now","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","_toConsumableArray","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","round","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","test","maxDefaults","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","match","floatRegex","number","unit","replace","defaultValue","functionRegex","filter","getAnimatableNone","functions","join","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","transition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","from","get","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","animationState","setActive","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","all","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","dragControls","subscribe","addListeners","asyncHandler","PanGesture","apply","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","child","sort","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","notify","SVGElement","tagName","_this$options","mount","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","read","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","delete","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","_a","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","isMotionValue","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","ref","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","shallowCompare","prev","prevLength","resolveVariant","custom","resolveVariantFromProps","getCurrent","optimizedAppearDataAttribute","camelToDash","isWillChangeMotionValue","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","resolved","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","hasAnimated","appearId","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trim","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","indexOf","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","_DOMVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_get","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}