{"version":3,"file":"static/js/112.9b534e5b.chunk.js","mappings":"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","sources":["pages/auth/jwt/login.js","sections/auth/jwt/jwt-login-view.js","sections/auth/jwt/jwt-register-view.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport { JwtLoginView } from 'src/sections/auth/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Jwt: Login</title>\r\n      </Helmet>\r\n\r\n      <JwtLoginView />\r\n    </>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { RouterLink } from 'src/routes/components';\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\n// config\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// auth\nimport { useAuthContext } from 'src/auth/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\nimport { useLoginEmployee } from 'src/queries/EmployeeQueries';\nimport { setSession } from 'src/auth/context/jwt/utils';\nimport { useAuth } from 'src/auth/context/jwt/auth-provider';\nimport { useThrottle } from 'yet-another-react-lightbox';\nimport { useSnackbar } from 'src/components/snackbar';\n// ----------------------------------------------------------------------\n\nexport default function JwtLoginView() {\n  const password = useBoolean();\n  const { enqueueSnackbar } = useSnackbar();\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const defaultValues = {\n    email: '110',\n    password: 'pass123456',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const { handleSubmit } = methods;\n  const { mutateAsync: LoginMutation, isLoading, isError, error: ResError } = useLoginEmployee();\n  const renderHead = (\n    <Stack spacing={2} sx={{ mb: 5 }}>\n      <Typography variant=\"h4\">Sign in to Asset Management</Typography>\n    </Stack>\n  );\n  useEffect(() => {\n    if (isError) {\n      enqueueSnackbar('Please check your internet connection!', {\n        variant: 'error',\n        color: 'error',\n        anchorOrigin: { vertical: 'top', horizontal: 'center' },\n      });\n    }\n  }, [enqueueSnackbar, isError]);\n\n  const renderForm = (\n    <Stack spacing={2.5}>\n      <RHFTextField name=\"email\" label=\"Employee Code\" />\n\n      <RHFTextField\n        name=\"password\"\n        label=\"Password\"\n        type={password.value ? 'text' : 'password'}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={password.onToggle} edge=\"end\">\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        endIcon={<Iconify icon=\"eva:arrow-ios-forward-fill\" />}\n        sx={{ justifyContent: 'space-between', pl: 2, pr: 1.5 }}\n        loading={isLoading}\n      >\n        Login\n      </LoadingButton>\n      {/* {isError ? (\n\n        // <Alert severity=\"error\">\n        //   {ResError?.response?.status === 401\n        //     ? 'Invalid Credentials'\n        //     : 'Please Check Your Internet Connection'}\n        // </Alert>\n      ): null} */}\n    </Stack>\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(LoginMutation)}>\n      {renderHead}\n\n      {/* <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Use Employee Code : <strong>10231</strong> / password :\n        <strong> GeneratedPassword123</strong>\n      </Alert> */}\n\n      {renderForm}\n    </FormProvider>\n  );\n}\n","import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\r\n// config\r\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function JwtRegisterView() {\r\n  const { register } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  const password = useBoolean();\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name required'),\r\n    lastName: Yup.string().required('Last name required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(RegisterSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await register?.(data.email, data.password, data.firstName, data.lastName);\r\n\r\n      router.push(returnTo || PATH_AFTER_LOGIN);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.message);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\r\n      <Typography variant=\"h4\">Get started absolutely free</Typography>\r\n\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\"> Already have an account? </Typography>\r\n\r\n        <Link href={paths.auth.jwt.login} component={RouterLink} variant=\"subtitle2\">\r\n          Sign in\r\n        </Link>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderTerms = (\r\n    <Typography\r\n      component=\"div\"\r\n      sx={{\r\n        color: 'text.secondary',\r\n        mt: 2.5,\r\n        typography: 'caption',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {'By signing up, I agree to '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Terms of Service\r\n      </Link>\r\n      {' and '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Privacy Policy\r\n      </Link>\r\n      .\r\n    </Typography>\r\n  );\r\n\r\n  const renderForm = (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      <Stack spacing={2.5}>\r\n        {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n          <RHFTextField name=\"firstName\" label=\"First name\" />\r\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n        </Stack>\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={password.value ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={password.onToggle} edge=\"end\">\r\n                  <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <LoadingButton\r\n          fullWidth\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n        >\r\n          Create account\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n\r\n      {renderTerms}\r\n    </>\r\n  );\r\n}\r\n"],"names":["LoginPage","_jsxs","_Fragment","children","_jsx","Helmet","JwtLoginView","password","useBoolean","enqueueSnackbar","useSnackbar","LoginSchema","Yup","shape","email","required","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","_useLoginEmployee","useLoginEmployee","LoginMutation","mutateAsync","isLoading","isError","renderHead","error","Stack","spacing","sx","mb","Typography","variant","useEffect","color","anchorOrigin","vertical","horizontal","renderForm","RHFTextField","name","label","type","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","LoadingButton","fullWidth","size","endIcon","justifyContent","pl","pr","loading","FormProvider","onSubmit","JwtRegisterView","register","useAuthContext","router","useRouter","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","returnTo","useSearchParams","get","RegisterSchema","firstName","lastName","reset","isSubmitting","formState","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","push","PATH_AFTER_LOGIN","t0","console","message","stop","_x","apply","arguments","direction","Link","href","paths","auth","jwt","login","component","RouterLink","renderTerms","mt","typography","textAlign","underline","Alert","severity","xs","sm"],"sourceRoot":""}